version: 2.1
setup: true
orbs:
  queue: eddiewebb/queue@1.12.0
  continuation: circleci/continuation@0.3.1
  go: circleci/go@1.7.3
executors:
  docker:
    docker:
      - image: cimg/base:2022.07
  linux-n: # a Linux VM running Ubuntu 20.04
    machine:
      image: ubuntu-2004:202107-02
  linux-a: # a Linux VM running Ubuntu 20.04
    machine:
      image: ubuntu-2004:202101-01
    resource_class: arm.medium
  macos: # macos executor running Xcode
    macos:
      xcode: 14.2.0
    #resource_class: macos.m1.large.gen1


commands:
  block_workflow:
    parameters:
      wait_for_job_name:
        type: string
        description: 
          "Name of the Job you want to make wait"
        default: ""
      only-on-branch:
        type: string 
        description:
          "Name of the branch"
        default: "main"
    steps:
      - queue/block_workflow:
          requires:
            - << parameters.wait_for_job_name >>
          time: '5'


jobs:

  install_and_run_go:
    executor: macos
    steps:
      - checkout
      - run:
          name: Install Go
          command: |
            curl -L -o go.tar.gz https://golang.org/dl/go1.17.4.darwin-amd64.tar.gz
            sudo tar -C /usr/local -xzf go.tar.gz
            ls -al /usr/local/go/bin 
            mkdir ~/go
            export GOPATH=~/go
            export PATH=$PATH:/usr/local/go/bin
            echo $PATH
      - run:
          name: Run Go Command
          command: |
            cd /usr/local/go/bin
            ls -al
            file go
            ./go version 
            ./go env
            echo "test"
  
  run_go_env-normal:
    executor: linux-n
    steps:
      - checkout
      - go/install
      - run: 
          name: Test for go ENV 
          command: |
            go env
      - run:
          name: Uname command 
          command: | 
            uname -a
  
  run_go_env-arm:
    executor: linux-a
    #resource_class: arm.medium
    steps:
      - checkout
      # - go/install
      # - run: 
      #     name: Test for go ENV 
      #     command: |
      #       go env
      - run:
          name: Uname command 
          command: | 
            uname -a
            arch

  diff-os:
    parameters:
      os:
        type: executor
    executor: << parameters.os >>
    steps:
      - checkout
      - run: 
          name: Running the OS command 
          command: |
            ls -al 
            hostname

  test-job:
    executor: base-cimg-executor
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Test base image
          command: |
            ls -l
            docker version
            cat /etc/lsb-release
  
  update-env: 
    executor: base-cimg-executor
    steps:
      - checkout
      - queue/until_front_of_line:
          block-workflow: true
          time: '5'
          only-on-branch: 'main'
      - run:
          name: Update Env
          command: | 
            echo "Update Env"
            echo "Update block-orb-test"
            # start time
            date +"%H:%M:%S"

            # sleep for 5 seconds
            sleep 120

            # end time
            date +"%H:%M:%S"
  
  # block-orb-test:
  #   executor: base-cimg-executor
  #   steps:
  #     - checkout
  #     - eddiewebb/queue/lock:
  #         resource-name: my-resource
  #     - run:
  #         name: block-orb-test
  #         command: | 
  #           echo "Update block-orb-test"
  #           # start time
  #           date +"%H:%M:%S"

  #           # sleep for 5 seconds
  #           sleep 120

  #           # end time
  #           date +"%H:%M:%S"
  #     - eddiewebb/queue/unlock:
  #         resource-name: my-resource


workflows:
  version: 2

  run-go-env-w:
    jobs:
      # - run_go_env-normal:
      #     name: "Go env normal"
      # - run_go_env-arm:
      #     name: "Go env arm"
      - install_and_run_go:
          name: "Macos run"

  # diff-os-worflow:
  #   jobs:
  #     - diff-os:
  #         matrix:
  #           parameters:
  #             os: [docker, linux, macos]
  # post-release:
  #   jobs:
  #     - continuation/continue:
  #         configuration_path: .circleci/post-release.yaml


  # first-test:
  #   jobs:
  #     - update-env:
  #         name: "Running the update env"

      # - block-orb-test:
      #     name:  Test for block-orb
      # - test-job:
      #     name: workflow-test-job 
      # - update-env:
      #     # filters:
      #     #   branches:
      #     #     only:
      #     #       - main
      #     requires:
      #       - "workflow-test-job"
      #     name: update-env-flow 
  




  # build:
  #   docker:
  #     - image: python:3.6.3-jessie

  #   #working_directory: /tmp
  #   steps:
  #     - checkout
  #     # - run:
  #     #     name: Creating Dummy Artifacts
  #     #     working_directory: /tmp
  #     #     command: |
  #     #       echo "my artifact file" > /tmp/artifact-1;
  #     #       mkdir /tmp/artifacts;
  #     #       echo "my artifact files in a dir" > /tmp/artifacts/artifact-2;
  #     - run:
  #         name: "running requirements.txt file"
  #         command: |
  #           pip install -r requirements.txt
  #     - run:
  #         name: Running python script
  #         #working_directory: /tmp
  #         command: |
  #           echo "Running python make file"
  #           ls -al
  #           mkdir /tmp/artifacts
  #           make run-python-code > /tmp/artifacts/python-test

  #     - store_artifacts:
  #         path: /tmp/artifacts
          #destination: python-test-file
          

      # - store_artifacts:
      #     path: /tmp/artifact-1
      #     destination: artifact-file

      # - store_artifacts:
      #     path: /tmp/artifacts
      #     destination: sachin
  